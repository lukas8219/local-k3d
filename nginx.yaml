apiVersion: v1
kind: Namespace
metadata:
  name: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes 1;
    events {
      worker_connections 1024;
    }
    http {
      upstream grafana {
        server grafana.grafana.svc.cluster.local:3000;
        keepalive 1024;
      }
      upstream prometheus {
        server prometheus-service.prometheus.svc.cluster.local:80;
        keepalive 1024;
      }
      server {
        listen 80;
        server_name grafana.localhost;
        location / {
          proxy_set_header Host $http_host;
          proxy_pass http://grafana/;
        }
      }
      server {
        listen 80;
        server_name prometheus.localhost;
        location / {
          proxy_set_header Host $http_host;
          proxy_pass http://prometheus/;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: nginx
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: nginx
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80
